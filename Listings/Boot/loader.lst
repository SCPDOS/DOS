     1                                  BITS 16
     2                                  ORG	600h
     3                                  
     4                                  relocBase   equ 600h ;Relocate to 600h
     5                                  loadAddress equ 800h
     6                                  startSector equ 33
     7 00000000 EB3C                        jmp short start
     8 00000002 90                          nop
     9                                  ;---------------------------Tables--------------------------
    10 00000003 534350444F537631            osname: db 'SCPDOSv1'
    11                                  
    12                                      ;Start of BIOS Parameter Block
    13                                  
    14 0000000B 0002                        bypsec: dw 0200h     ;bytes per sector (200h=512)                  
    15 0000000D 01                          secpcl: db 01h       ;sectors per cluster                          
    16 0000000E 0100                        ressec: dw 0001h     ;reserved sectors                             
    17 00000010 02                          numFAT: db 02h       ;number of FATs                               
    18 00000011 E000                        nortdr: dw 00E0h     ;number of root directory entries             
    19 00000013 400B                        nosect: dw 0B40h     ;number of sectors (1440 sectors per side)    
    20 00000015 F0                          medesc: db 0F0h      ;media descriptor (f0=FDD)                    
    21 00000016 0900                        FATsec: dw 0009h     ;number of sectors per FAT                    
    22 00000018 1200                        sectrc: dw 0012h     ;number of sectors/tracks                     
    23 0000001A 0200                        numhed: dw 0002h     ;number of read/write heads                   
    24 0000001C 00000000                    numhid: dd 00000000h ;number of hidden sectors                     
    25 00000020 00000000                    nsecfs: dd 00000000h ;number of "huge" sectors in the FS (FAT)     
    26                                  
    27                                      ;End of BPB
    28                                  
    29 00000024 00                          ldrvnu: db 00h       ;logical drive number, 80h=first HDD, 00h=1st FDD
    30 00000025 00                          res1:   db 00h       ;reserved sector 1, BS reserved, used in boot
    31 00000026 29                          extsig: db 29h       ;Extended boot signature (29h = EBPB signature)
    32                                  
    33                                      ;Start of Extended BPB
    34 00000027 0F0D2A1C                    sernum: dd 1C2A0D0Fh       ;serial number of drive
    35 0000002B 4E4F204E414D452020-         vollbl: db 'NO NAME    '  ;default volume label name
    35 00000034 2020               
    36 00000036 4641543132202020            fstype: db 'FAT12   '     ;file system type
    37                                      
    38                                  ;-----------------------------------------------------------
    39                                  start: 
    40 0000003E 31C0                        xor ax, ax
    41 00000040 8ED8                        mov ds, ax
    42 00000042 8EC0                        mov es, ax
    43 00000044 8ED0                        mov ss, ax
    44 00000046 BC0080                      mov sp, 8000h
    45 00000049 BE007C                      mov si, 7C00h 
    46 0000004C BF0006                      mov di, relocBase
    47 0000004F B90001                      mov cx, 100h
    48 00000052 FC                          cld             ;Ensure writes are in the write direction
    49 00000053 F3A5                        rep movsw
    50 00000055 EA[5A00]0000                jmp 0:s1       ;Far jump to the next instruction
    51                                  
    52                                  s1:
    53 0000005A 89D6                        mov si, dx  ;Save drive number in si
    54 0000005C B801E8                      mov ax, 0e801h
    55 0000005F CD15                        int 15h
    56 00000061 3D0008                      cmp ax, 800h    ;Get number of Kb
    57 00000064 730A                        jae .s2         ;Above or equal, OK!
    58 00000066 30C0                        xor al, al      ;Error code
    59 00000068 81F90008                    cmp cx, 800h
    60 0000006C 0F828E00                    jb fail
    61                                  .s2:
    62 00000070 B80300                      mov ax, 03h
    63 00000073 CD10                        int 10h ;set video mode
    64                                  ;sectrc used and numhed used for sectors per track and number of heads
    65 00000075 89F2                        mov dx, si
    66 00000077 8816[0000]                  mov byte [drvnum], dl   ;Save the drive byte from dl
    67 0000007B F6C280                      test dl, 80h
    68 0000007E 742E                        jz readFloppy
    69                                  ;If the boot device is emulated as a hard drive, 
    70                                  ;   use BIOS extensions as CHS is buggy.
    71 00000080 BE[0400]                    mov si, pktptr
    72 00000083 89F7                        mov di, si
    73 00000085 31C0                        xor ax, ax
    74 00000087 B90800                      mov cx, 8
    75 0000008A F3AB                        rep stosw   ;Store 8 zero words
    76 0000008C C7041000                    mov word [si], 0010h    ;Packet size and reserved zero
    77 00000090 C744023A00                  mov word [si + 2], 58   ;Number of sectors to transfer
    78 00000095 C744040008                  mov word [si + 4], loadAddress   ;Offset of buffer
    79 0000009A C744060000                  mov word [si + 6], 0      ;Segment of buffer
    80 0000009F C744082100                  mov word [si + 8], startSector     ;Starting sector
    81 000000A4 B442                        mov ah, 42h
    82 000000A6 CD13                        int 13h
    83 000000A8 B406                        mov ah, 6
    84 000000AA 7252                        jc fail
    85 000000AC EB41                        jmp short launchSCP
    86                                  readFloppy:
    87 000000AE BE1000                      mov si, 10h     ;Up to 16 error retries
    88 000000B1 BF3A00                      mov di, 58      ;Copy MAXIMUM 58 sectors!!!!
    89 000000B4 BD2100                      mov bp, startSector      ;Start at LBA 33
    90 000000B7 BB0008                      mov bx, loadAddress    ;Start copy buffer at 800h
    91                                  readDisk:
    92                                  ;Convert bp into CHS for int 13h
    93 000000BA 55                          push bp         ;Save the current LBA on the stack temporarily
    94                                  ;Sector
    95 000000BB 89E8                        mov ax, bp		;mov LBA into ax to get head and sec num
    96 000000BD F636[1800]              	div byte [sectrc]	;divide ax by the low byte of sectrc	
    97 000000C1 FEC4                    	inc ah			;increment the remainder to get sectors
    98 000000C3 88E1                    	mov cl, ah		;save the remainder in its ret register
    99                                  ;--------------------------------------				
   100                                  ;Head
   101 000000C5 30E4                    	xor ah, ah		;nullify the remainder for the next part
   102 000000C7 F636[1A00]              	div byte [numhed]	;divide ax by the low byte of numhed
   103 000000CB 88E5                    	mov ch, ah		;Save the head in ch
   104                                  ;--------------------------------------				
   105                                  ;Cylinder
   106 000000CD A1[1A00]                	mov ax, word [numhed]	;mov numhead into ax
   107 000000D0 F726[1800]              	mul word [sectrc]	    ;multiply ax by sec/trc
   108 000000D4 95                      	xchg bp, ax		;switch bp and ax so that we can divide them
   109 000000D5 F7F5                    	div bp			;Divide them here!
   110 000000D7 88C6                    	mov dh, al		;Save the result in dh
   111                                  ;--------------------------------------				
   112 000000D9 86EE                        xchg ch, dh     ;Swap ch and dh for return value
   113 000000DB 5D                          pop bp          ;Return the current LBA
   114 000000DC 8A16[0000]                  mov dl, byte [drvnum]   ;we saved the drive in medesc
   115 000000E0 B80102                      mov ax, 0201h           ;Disk read, one sector at a time
   116 000000E3 CD13                        int 13h
   117 000000E5 7210                        jc diskError	    ; Error detected, restart file copy
   118 000000E7 81C30002                    add bx, 200h        ; Goto next sector position
   119 000000EB 45                          inc bp
   120 000000EC 4F                          dec di
   121 000000ED 75CB                        jnz readDisk
   122                                  launchSCP:
   123                                  ;Construct SCPBIOS SysInit Parameter Table
   124 000000EF BB[3601]                    mov bx, SysInitTable    ;es points to segment, get table to bx
   125 000000F2 EA00080000                  jmp 0:loadAddress ; go to the next file
   126                                  diskError: 
   127 000000F7 31C0                        xor ax, ax 		; Disk reset
   128 000000F9 CD13                        int 13h			
   129 000000FB 4E                          dec si
   130 000000FC 75BC                        jnz readDisk	; Reset disk and read sector again
   131                                  ;-------------------------------Errors------------------------------
   132                                  fail:
   133 000000FE BE[1501]                    mov si, .msg
   134                                  .write: ;destroys registers ax and bx
   135 00000101 AC                          lodsb
   136 00000102 3C00                        cmp al, 0 ;check for zero
   137 00000104 7409                        je .cont
   138 00000106 B40E                        mov ah, 0Eh	;TTY output
   139 00000108 BB0700                      mov bx, 0007h ;colour
   140 0000010B CD10                        int 10h
   141 0000010D EBF2                        jmp short .write
   142                                  .cont:
   143 0000010F 31C0                        xor ax, ax
   144 00000111 CD16                        int 16h	;await keystroke
   145 00000113 CD18                        int 18h	;Reset
   146 00000115 4E6F6E205379737465-     .msg: db "Non System Disk or Disk Error.",0Ah,0Dh,0
   146 0000011E 6D204469736B206F72-
   146 00000127 204469736B20457272-
   146 00000130 6F722E0A0D00       
   147                                  SysInitTable:
   148 00000136 0C                      .lengthb db 0Ch
   149 00000137 01                      .numSecb db 1
   150 00000138 0000                    .resWord dw 00h
   151 0000013A 5B00000000000000        .FileLBA dq 5Bh  ;Start at Sector 91 (first sector of load)
   152                                  
   153 00000142 E8<rep BCh>             times 510-($-$$) db 0E8h
   154 000001FE 55                          db 55h
   155 000001FF AA                          db 0AAh
   156                                  
   157                                  Segment .bss nobits start=502h
   158 00000000 ??                      drvnum  resb  1 ;Drive number
   159 00000001 ??????                      alignb 4
   160 00000004 <res 10h>               pktptr  resq  2 ;Packet Pointer, 16 bytes in size
   160          ------------------       info: assembly required 1+2+2 passes

