     1                                  BITS 16
     2                                  ORG	600h
     3                                  
     4                                  relocBase   equ 600h ;Relocate to 600h
     5                                  loadAddress equ 800h
     6 00000000 EB62                        jmp short start
     7 00000002 90                          nop
     8                                  ;---------------------------Tables--------------------------
     9 00000003 534350444F537631            osname: db 'SCPDOSv1'
    10                                  
    11                                      ;Start of BIOS Parameter Block for FAT 32
    12                                      ;This describes a filesystem for the full 16Gb USB test stick
    13                                  
    14 0000000B 0002                        bypsec: dw 0200h     ;bytes per sector                 
    15 0000000D 10                          secpcl: db 10h       ;sectors per cluster                          
    16 0000000E 2000                        ressec: dw 0020h     ;reserved sectors                             
    17 00000010 02                          numFAT: db 02h       ;number of FATs                               
    18 00000011 0000                        nortdr: dw 0000h     ;number of root directory entries             
    19 00000013 0000                        nosect: dw 0000h     ;number of sectors  
    20 00000015 F0                          medesc: db 0F0h      ;media descriptor (f0=Removable)                    
    21 00000016 0000                        FATsec: dw 0000h     ;number of sectors per FAT                    
    22 00000018 3F00                        sectrc: dw 003Fh     ;number of sectors/tracks                     
    23 0000001A FF00                        numhed: dw 00FFh     ;number of read/write heads                   
    24 0000001C 00000000                    numhid: dd 00000000h ;number of hidden sectors                     
    25 00000020 003A9001                    nsecfs: dd 01903A00h ;number of "huge" sectors in the FS (FAT)     
    26                                  
    27 00000024 903A0000                    nFAT32: dd 00003A90h ;32 bit count of sectors in one FAT
    28 00000028 0000                        extFlg: dw 0h        ;Set to 0 for us
    29 0000002A 0000                        FSver:  dw 0h        ;FS version word, set to 0   
    30 0000002C 02000000                    rtCust: dd 2h        ;First cluster of Root Directory
    31 00000030 0100                        FSinfo: dw 1h        ;Sector number of FSInfo sector, no maintained
    32 00000032 0000                        bkupBS: dw 0h        ;Sector of backup boot sector
    33 00000034 000000000000000000-                 db 12 dup(0) ;Reserved 12 bytes
    33 0000003D 000000             
    34                                  
    35 00000040 00                          ldrvnu: db 00h       ;logical drive number, 80h=first HDD, 00h=1st FDD
    36 00000041 01                          res1:   db 01h       ;reserved sector 1, BS reserved, used in boot
    37 00000042 29                          extsig: db 29h       ;Extended boot signature (29h = EBPB signature)
    38 00000043 0F0D2A1C                    sernum: dd 1C2A0D0Fh       ;serial number of drive
    39 00000047 4E4F204E414D452020-         vollbl: db 'NO NAME    '  ;default volume label name
    39 00000050 2020               
    40 00000052 4641543332202020            fstype: db 'FAT32   '     ;file system type
    41                                      
    42                                  ;-----------------------------------------------------------
    43                                  ;Non BPB additional variables
    44 0000005A 4075000000000000        startSector:        dq 7540h    ;Usually read as a word
    45 00000062 3A00                    numberOfSectors:    dw 58   ;Number of sectors to read
    46                                  start: 
    47 00000064 FA                          cli
    48 00000065 31C0                        xor ax, ax
    49 00000067 8ED8                        mov ds, ax
    50 00000069 8EC0                        mov es, ax
    51 0000006B 8ED0                        mov ss, ax
    52 0000006D BC0080                      mov sp, 8000h
    53 00000070 BE007C                      mov si, 7C00h 
    54 00000073 BF0006                      mov di, relocBase
    55 00000076 B90001                      mov cx, 100h
    56 00000079 FC                          cld             ;Ensure writes are in the write direction
    57 0000007A F3A5                        rep movsw
    58 0000007C FB                          sti
    59 0000007D EA[8200]0000                jmp 0:s1       ;Far jump to the next instruction
    60                                  
    61                                  s1:
    62 00000082 803EFD07FF                  cmp byte [relocBase + 509], -1  ;Any non -1 value is non-bootable
    63 00000087 0F85B300                    jne fail
    64 0000008B 89D6                        mov si, dx  ;Save drive number in si
    65 0000008D B801E8                      mov ax, 0e801h
    66 00000090 CD15                        int 15h
    67 00000092 3D0008                      cmp ax, 800h    ;Get number of Kb
    68 00000095 730A                        jae .s2         ;Above or equal, OK!
    69 00000097 30C0                        xor al, al      ;Error code
    70 00000099 81F90008                    cmp cx, 800h
    71 0000009D 0F829D00                    jb fail
    72                                  .s2:
    73 000000A1 B80300                      mov ax, 03h
    74 000000A4 CD10                        int 10h ;set video mode
    75                                  ;sectrc used and numhed used for sectors per track and number of heads
    76 000000A6 89F2                        mov dx, si
    77 000000A8 8816[0000]                  mov byte [drvnum], dl   ;Save the drive byte from dl
    78 000000AC F6C280                      test dl, 80h
    79 000000AF 743B                        jz readFloppy
    80                                  ;If the boot device is emulated as a hard drive, 
    81                                  ;   use BIOS extensions as CHS is buggy.
    82 000000B1 BE[0400]                    mov si, pktptr
    83 000000B4 89F7                        mov di, si
    84 000000B6 31C0                        xor ax, ax
    85 000000B8 B90800                      mov cx, 8
    86 000000BB F3AB                        rep stosw   ;Store 8 zero words
    87 000000BD C7041000                    mov word [si], 0010h    ;Packet size and reserved zero
    88 000000C1 A1[6200]                    mov ax, word [numberOfSectors]
    89 000000C4 894402                      mov word [si + 2], ax   ;Number of sectors to transfer
    90 000000C7 C744040008                  mov word [si + 4], loadAddress   ;Offset of buffer
    91 000000CC C744060000                  mov word [si + 6], 0      ;Segment of buffer
    92 000000D1 56                          push si
    93 000000D2 81C60800                    add si, 8   ;Goto the starting sector qword destination
    94 000000D6 BF[5A00]                    mov di, startSector ;Starting sector qword source
    95 000000D9 87FE                        xchg di, si ;Swap the source and destination pointers
    96 000000DB B90400                      mov cx, 4   ;Copy all 4 words over
    97 000000DE F3A5                        rep movsw
    98 000000E0 5E                          pop si      ;Return si to the head of the read packet
    99 000000E1 B80042                      mov ax, 4200h
   100 000000E4 CD13                        int 13h
   101 000000E6 B406                        mov ah, 6
   102 000000E8 7254                        jc fail
   103 000000EA EB43                        jmp short launchSCP
   104                                  readFloppy:
   105 000000EC BE1000                      mov si, 10h     ;Up to 16 error retries
   106 000000EF 8B3E[6200]                  mov di, word [numberOfSectors]  ;Copy MAXIMUM 58 sectors!!!!
   107 000000F3 8B2E[5A00]                  mov bp, word [startSector]      ;Start at LBA 33
   108 000000F7 BB0008                      mov bx, loadAddress    ;Start copy buffer at 800h
   109                                  readDisk:
   110                                  ;Convert bp into CHS for int 13h
   111 000000FA 55                          push bp         ;Save the current LBA on the stack temporarily
   112                                  ;Sector
   113 000000FB 89E8                        mov ax, bp		;mov LBA into ax to get head and sec num
   114 000000FD F636[1800]              	div byte [sectrc]	;divide ax by the low byte of sectrc	
   115 00000101 FEC4                    	inc ah			;increment the remainder to get sectors
   116 00000103 88E1                    	mov cl, ah		;save the remainder in its ret register
   117                                  ;--------------------------------------				
   118                                  ;Head
   119 00000105 30E4                    	xor ah, ah		;nullify the remainder for the next part
   120 00000107 F636[1A00]              	div byte [numhed]	;divide ax by the low byte of numhed
   121 0000010B 88E5                    	mov ch, ah		;Save the head in ch
   122                                  ;--------------------------------------				
   123                                  ;Cylinder
   124 0000010D A1[1A00]                	mov ax, word [numhed]	;mov numhead into ax
   125 00000110 F726[1800]              	mul word [sectrc]	    ;multiply ax by sec/trc
   126 00000114 95                      	xchg bp, ax		;switch bp and ax so that we can divide them
   127 00000115 F7F5                    	div bp			;Divide them here!
   128 00000117 88C6                    	mov dh, al		;Save the result in dh
   129                                  ;--------------------------------------				
   130 00000119 86EE                        xchg ch, dh     ;Swap ch and dh for return value
   131 0000011B 5D                          pop bp          ;Return the current LBA
   132 0000011C 8A16[0000]                  mov dl, byte [drvnum]   ;we saved the drive in medesc
   133 00000120 B80102                      mov ax, 0201h           ;Disk read, one sector at a time
   134 00000123 CD13                        int 13h
   135 00000125 7210                        jc diskError	    ; Error detected, restart file copy
   136 00000127 81C30002                    add bx, 200h        ; Goto next sector position
   137 0000012B 45                          inc bp
   138 0000012C 4F                          dec di
   139 0000012D 75CB                        jnz readDisk
   140                                  launchSCP:
   141                                  ;Construct SCPBIOS SysInit Parameter Table
   142 0000012F BB[F101]                    mov bx, SysInitTable    ;es points to segment, get table to bx
   143 00000132 EA00080000                  jmp 0:loadAddress ; go to the next file
   144                                  diskError: 
   145 00000137 31C0                        xor ax, ax 		; Disk reset
   146 00000139 CD13                        int 13h			
   147 0000013B 4E                          dec si
   148 0000013C 75BC                        jnz readDisk	; Reset disk and read sector again
   149                                  ;-------------------------------Errors------------------------------
   150                                  fail:
   151 0000013E BE[5501]                    mov si, .msg
   152                                  .write: ;destroys registers ax and bx
   153 00000141 AC                          lodsb
   154 00000142 3C00                        cmp al, 0 ;check for zero
   155 00000144 7409                        je .cont
   156 00000146 B40E                        mov ah, 0Eh	;TTY output
   157 00000148 BB0700                      mov bx, 0007h ;colour
   158 0000014B CD10                        int 10h
   159 0000014D EBF2                        jmp short .write
   160                                  .cont:
   161 0000014F 31C0                        xor ax, ax
   162 00000151 CD16                        int 16h	;await keystroke
   163 00000153 CD18                        int 18h	;Reset
   164 00000155 4E6F6E205379737465-     .msg: db "Non System Disk or Disk Error.",0Ah,0Dh,0
   164 0000015E 6D204469736B206F72-
   164 00000167 204469736B20457272-
   164 00000170 6F722E0A0D00       
   165                                  
   166 00000176 E8<rep 7Bh>             times 509-0Ch-($-$$) db 0E8h
   167                                  SysInitTable:
   168 000001F1 0C                          .lengthb    db 0Ch
   169 000001F2 01                          .numSecb    db 1
   170 000001F3 0000                        .resWord    dw 00h
   171 000001F5 7A75000000000000            .FileLBA    dq 757Ah 
   172                                  
   173 000001FD FF                      bootOnFlag:     db -1   ;Bootable signature
   174 000001FE 55                                      db 55h
   175 000001FF AA                                      db 0AAh
   176                                  
   177                                  Segment .bss nobits start=502h
   178 00000000 ??                      drvnum  resb  1 ;Drive number
   179 00000001 ??????                      alignb 4
   180 00000004 <res 10h>               pktptr  resq  2 ;Packet Pointer, 16 bytes in size
   180          ------------------       info: assembly required 1+2+2 passes

