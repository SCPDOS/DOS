;Kernel Dispatch Function Table

kDispTbl:
    dw simpleTerminate - kDispTbl       ;AH = 00H, PROCESS MANAGEMENT
    dw charIn_BE - kDispTbl             ;AH = 01H, CHAR IO
    dw charOut_B - kDispTbl             ;AH = 02H, CHAR IO
    dw auxIn_B - kDispTbl               ;AH = 03H, CHAR IO
    dw auxOut_B - kDispTbl              ;AH = 04H, CHAR IO
    dw prnOut_B - kDispTbl              ;AH = 05H, CHAR IO
    dw directConIO - kDispTbl           ;AH = 06H, CHAR IO
    dw charIn - kDispTbl                ;AH = 07H, CHAR IO
    dw charIn_B - kDispTbl              ;AH = 08H, CHAR IO
    dw printString_B - kDispTbl         ;AH = 09H, CHAR IO
    dw buffCharInput_BE - kDispTbl      ;AH = 0AH, CHAR IO
    dw checkStdinStatus - kDispTbl      ;AH = 0BH, CHAR IO
    dw clearbuffDoFunc - kDispTbl       ;AH = 0CH, CHAR IO
    dw diskReset - kDispTbl             ;AH = 0DH, DISK MANAGEMENT
    dw selectDisk - kDispTbl            ;AH = 0EH, DISK MANAGEMENT
    dw openFileFCB - kDispTbl           ;AH = 0FH, FILE OPERATION       FCB
    dw closeFileFCB - kDispTbl          ;AH = 10H, FILE OPERATION       FCB
    dw findFirstFileFCB - kDispTbl      ;AH = 11H, FILE OPERATION       FCB
    dw findNextFileFCB - kDispTbl       ;AH = 12H, FILE OPERATION       FCB
    dw deleteFileFCB - kDispTbl         ;AH = 13H, FILE OPERATION       FCB
    dw sequentialReadFCB - kDispTbl     ;AH = 14H, RECORD OPERATION     FCB
    dw sequentialWriteFCB - kDispTbl    ;AH = 15H, RECORD OPERTAION     FCB
    dw createFileFCB - kDispTbl         ;AH = 16H, FILE OPERATION       FCB
    dw renameFileFCB - kDispTbl         ;AH = 17H, FILE OPERATION       FCB
    dw noOp - kDispTbl                  ;AH = 18H, RESERVED
    dw getCurrentDisk - kDispTbl        ;AH = 19H, DISK MANAGEMENT
    dw setDTA - kDispTbl                ;AH = 1AH, RECORD OPERATION     F/H
    dw FATinfoDefault - kDispTbl        ;AH = 1BH, DISK MANAGEMENT
    dw FATinfoDevice - kDispTbl         ;AH = 1CH, DISK MANAGEMENT
    dw noOp - kDispTbl                  ;AH = 1DH, RESERVED
    dw noOp - kDispTbl                  ;AH = 1EH, RESERVED
    dw getCurrentDPBptr - kDispTbl      ;AH = 1FH, INTERNAL, GET CURR DRIVE DPB PTR
    dw noOp - kDispTbl                  ;AH = 20H, RESERVED
    dw randomReadFCB - kDispTbl         ;AH = 21H, RECORD OPERATION     FCB
    dw randomWriteFCB - kDispTbl        ;AH = 22H, RECORD OPERATION     FCB
    dw getFileSizeFCB - kDispTbl        ;AH = 23H, FILE OPERATION       FCB
    dw setRelRecordFCB - kDispTbl       ;AH = 24H, RECORD OPERATION     FCB
    dw setIntVector - kDispTbl          ;AH = 25H, MISC. SYS. FUNCTION
    dw copyPSP - kDispTbl               ;AH = 26H, PROCESS MANAGEMENT
    dw randBlockReadFCB - kDispTbl      ;AH = 27H, RECORD OPERATION     FCB
    dw randBlockWriteFCB - kDispTbl     ;AH = 28H, RECORD OPERATION     FCB
    dw parseFilenameFCB - kDispTbl      ;AH = 29H, FILE OPERATION       FCB
    dw getDate - kDispTbl               ;AH = 2AH, TIME AND DATE
    dw setDate - kDispTbl               ;AH = 2BH, TIME AND DATE
    dw getTime - kDispTbl               ;AH = 2CH, TIME AND DATE
    dw setTime - kDispTbl               ;AH = 2DH, TIME AND DATE
    dw setResetVerify - kDispTbl        ;AH = 2EH, DISK MANAGEMENT
    dw getDTA - kDispTbl                ;AH = 2FH, RECORD OPERATION     F/H
    dw getDOSversion - kDispTbl         ;AH = 30H, MISC. SYS. FUNCTION
    dw terminateStayRes - kDispTbl      ;AH = 31H, PROCESS MANAGEMENT
    dw getDeviceDPBptr - kDispTbl       ;AH = 32H, INTERNAL, GET DEVICE DPB PTR
    dw cbcServer - kDispTbl             ;AH = 33H, MISC. SYS. FUNCTION
    dw getInDOSflagPtr - kDispTbl       ;AH = 34H, GET PTR TO INDOS FLAG
    dw getIntVector - kDispTbl          ;AH = 35H, MISC. SYS. FUNCTION
    dw getDiskFreeSpace - kDispTbl      ;AH = 36H, DISK MANAGEMENT
    dw getsetSwitchChar - kDispTbl      ;AH = 37H, INTERNAL, CHANGE SWITCH CHAR
    dw getsetCountryInfo - kDispTbl     ;AH = 38H, MISC. SYS. FUNCTION
    dw makeDIR - kDispTbl               ;AH = 39H, DIRECTORY OPERATION
    dw removeDIR - kDispTbl             ;AH = 3AH, DIRECTORY OPERATION
    dw setCurrentDIR - kDispTbl         ;AH = 3BH, DIRECTORY OPERATION
    dw createFileHdl - kDispTbl         ;AH = 3CH, FILE OPERATION       HANDLE
    dw openFileHdl - kDispTbl           ;AH = 3DH, FILE OPERATION       HANDLE
    dw closeFileHdl - kDispTbl          ;AH = 3EH, FILE OPERATION       HANDLE
    dw readFileHdl - kDispTbl           ;AH = 3FH, RECORD OPERATION     HANDLE
    dw writeFileHdl - kDispTbl          ;AH = 40H, RECORD OPERATION     HANDLE
    dw deleteFileHdl - kDispTbl         ;AH = 41H, FILE OPERATION       HANDLE
    dw lseekHdl - kDispTbl              ;AH = 42H, RECORD OPERATION     HANDLE
    dw changeFileModeHdl - kDispTbl     ;AH = 43H, FILE OPERATION       HANDLE
    dw ioctrl - kDispTbl                ;AH = 44H, MISC. SYS. FUNCTION  HANDLE
    dw duplicateHandle - kDispTbl       ;AH = 45H, FILE OPERATION       HANDLE
    dw forceDuplicateHdl - kDispTbl     ;AH = 46H, FILE OPERATION       HANDLE
    dw getCurrentDIR - kDispTbl         ;AH = 47H, DIRECTORY OPERATION
    dw allocateMemory - kDispTbl        ;AH = 48H, MEMORY MANAGEMENT
    dw freeMemory - kDispTbl            ;AH = 49H, MEMORY MANAGEMENT
    dw reallocMemory - kDispTbl         ;AH = 4AH, MEMORY MANAGEMENT
    dw loadExecChild - kDispTbl         ;AH = 4BH, PROCESS MANAGEMENT
    dw terminateClean - kDispTbl        ;AH = 4CH, PROCESS MANAGEMENT
    dw getRetCodeChild - kDispTbl       ;AH = 4DH, PROCESS MANAGEMENT
    dw findFirstFileHdl - kDispTbl      ;AH = 4EH, FILE OPERATION       HANDLE
    dw findNextFileHdl - kDispTbl       ;AH = 4FH, FILE OPERATION       HANDLE
    dw scpspServer - kDispTbl           ;AH = 50H, INTERNAL, SET CURRENT PROCESS ID
    dw gcpspServer - kDispTbl           ;AH = 51H, INTERNAL, GET CURRENT PROCESS ID
    dw getSysVarsPtr - kDispTbl         ;AH = 52H, INTERNAL, GET SYSVARS POINTER
    dw createDPB - kDispTbl             ;AH = 53H, INTERNAL, TRANSLATE A BPB TO DPB
    dw getVerifySetting - kDispTbl      ;AH = 54H, DISK MANAGEMENT
    dw createPSP - kDispTbl             ;AH = 55H, INTERNAL, CREATE PSP
    dw renameFile - kDispTbl            ;AH = 56H, FILE OPERATION       HANDLE
    dw getSetFileDateTime - kDispTbl    ;AH = 57H, FILE OPERATION       HANDLE
    dw getsetMallocStrat - kDispTbl     ;AH = 58H, MEMORY MANAGEMENT
    dw getExtendedError - kDispTbl      ;AH = 59H, MISC. SYS. FUNCTION
    dw createUniqueFile - kDispTbl      ;AH = 5AH, FILE OPERATION       HANDLE
    dw createNewFile - kDispTbl         ;AH = 5BH, FILE OPERATION       HANDLE
    dw lockUnlockFile - kDispTbl        ;AH = 5CH, RECORD OPERATION     HANDLE
    dw dosServer - kDispTbl             ;AH = 5DH, INTERNAL, SERVER ACTIONS
    dw netServices - kDispTbl           ;AH = 5EH, NETWORK FUNCTIONS
    dw netRedir - kDispTbl              ;AH = 5FH, NETWORK FUNCTIONS
    dw trueName - kDispTbl              ;AH = 60H, INTERNAL, GET TRUE NAME
    dw systemServices - kDispTbl        ;AH = 61H, PROCESS MANAGEMENT, NEW
    dw gcpspServer - kDispTbl           ;AH = 62H, PROCESS MANAGEMENT
    dw noOp - kDispTbl                  ;AH = 63H, RESERVED
    dw sdlServer - kDispTbl             ;AH = 64H, INTERNAL, DRIVER LOOKAHEAD
    dw getExtLocalInfo - kDispTbl       ;AH = 65H, MISC. SYS. FUNCTION
    dw getsetGlobalCP - kDispTbl        ;AH = 66H, MISC. SYS. FUNCTION
    dw setHandleCount - kDispTbl        ;AH = 67H, FILE OPERAITON       F/H
    dw commitFile - kDispTbl            ;AH = 68H, FILE OPERATION       HANDLE
    dw getsetDiskSerial - kDispTbl      ;AH = 69H, INTERNAL, GET/SET DISK SER. NUM
    dw commitFile - kDispTbl            ;AH = 6AH, FILE OPERATION       HANDLE
    dw noOp - kDispTbl                  ;AH = 6BH, RESERVED
    dw xOpenHdl - kDispTbl              ;AH = 6CH, FILE OPERATION       HANDLE
kDispTblL  equ $ - kDispTbl 

mDispTbl:   ;Multiplex 2Fh/EAX=12xxh functions go here
    db mDispTblL/2  ;Number of entries in table
    dw multiplexTest - mDispTbl ;Installation check, return FFh
    dw closeMain - mDispTbl     ;AX=1201h, Close File handle
    dw muxGetIntVector - mDispTbl   ;AX=1202h, Get interrupt Vector
    dw getDosDataSeg - mDispTbl ;AX=1203h, Get DOS data segment pointer
    dw swapPathSeparator - mDispTbl ; AX=1204h, Normalise path separator
    dw charOut_B.in - mDispTbl  ;AX=1205h, Output Char to STDOUT
    dw criticalDOSError - mDispTbl ;AX=1206h, Invoke Critical Error
    dw makeBufferMostRecentlyUsed - mDispTbl    ;AX=1207h
    dw decrementOpenCount - mDispTbl    ;AX=1208h, Decrement SFT open count
    dw flushAndFreeBuffer - mDispTbl    ;AX=1209h, Flush and Free disk buffer
    dw shareCriticalError - mDispTbl    ;AX=120Ah, Signal Share Critical Error
    dw shareCheckOpenViolation - mDispTbl  ;AX=120Bh, Signal Sharing Open Violation 
    dw openDriverMux - mDispTbl ;AX=120Ch, Open device
    dw getDateAndTimeOld - mDispTbl ;AX=120Dh, Get Date and Time words
    dw markBuffersAsUnreferenced - mDispTbl ;AX=120Eh
    dw makeBufferMostRecentlyUsedGetNext - mDispTbl ;AX=120Fh
    dw findUnreferencedBuffer - mDispTbl ;AX=1210h
    dw normaliseFileName - mDispTbl ;AX=1211h
    dw strlen - mDispTbl ;AX=1212h, Get Length of ASCIIZ string
    dw uppercaseChar - mDispTbl ;AX=1213h, Uppercase Char
    dw compareFarPointers - mDispTbl   ;AX=1214h
    dw flushAndCleanBuffer - mDispTbl   ;AX=1215h
    dw getSFTPtrfromSFTNdx - mDispTbl   ;AX=1216h
    dw getCDSforDrive - mDispTbl    ;AX=1217h
    dw getUserRegs - mDispTbl   ;AX=1218h
    dw getCDS - mDispTbl    ;AX=1219h
    dw getDrvLetterFromPath - mDispTbl ;AX=121Ah
    dw setDaysInFeb - mDispTbl  ;AX=121Bh
    dw mpxChecksum - mDispTbl  ;AX=121Ch -> Checksum memory
    dw mpxSum - mDispTbl  ;AX=121Dh -> Sum Memory
    dw compareFileNames - mDispTbl ;AX=121Eh, Compare Filenames
    dw buildNewCDS - mDispTbl   ;AX=121Fh, Build CDS
    dw getJFTPtr - mDispTbl     ;AX=1220h, Get JFT entry
    dw trueNameMultiplex - mDispTbl     ;AX=1221h, Truename
    dw setErrorVars - mDispTbl ;AX=1222h, Set Extended Error Info
    dw checkIfCharDevice - mDispTbl  ;AX=1223, Check If Char Device
    dw shareRetryCountdown - mDispTbl   ;AX=1224h, Share Retry
    dw strlen2 - mDispTbl   ;AX=1225h, strlen2
    ;The file ops need all vars setup as if accessing thru DOS
    dw mpxOpen - mDispTbl       ;AX=1226h, Open File
    dw closeFileHdl - mDispTbl  ;AX=1227h, Close File
    dw mpxLseek - mDispTbl      ;AX=1228h, LSEEK
    dw readFileHdl - mDispTbl   ;AX=1229h, Read File
    dw noOp - mDispTbl          ;AX=122Ah, Nop, Set FASTOPEN EP (reserved)
    dw mpxIOCTL - mDispTbl      ;AX=122Bh, IOCTL
    dw getDrvChain - mDispTbl   ;AX=122Ch, Get device Chain (ptr in rax)
    dw getExtErrCde - mDispTbl  ;AX=122Dh, Get extended error code
    dw noOp - mDispTbl          ;AX=122Eh, Nop, Get/Set error table (reserved)
    dw setDOSversion - mDispTbl ;AX=122Fh, Set DOS version to report. Undocumented.
mDispTblL   equ     $ - mDispTbl

serverDispTbl:  ;Server Dispatch functions
    db serverDispTblL/2                         ;Number of entries
    dw serverDispatch - serverDispTbl           ;AX=5D00h
    dw commitAllFilesForProcess - serverDispTbl ;AX=5D01h
    dw closeFilesByName - serverDispTbl         ;AX=5D02h
    dw closeFilesByComputer - serverDispTbl     ;AX=5D03h
    dw closeFilesByProcess - serverDispTbl      ;AX=5D04h
    dw getOpenFileListEntry - serverDispTbl     ;AX=5D05h
    dw getSDAData - serverDispTbl               ;AX=5D06h
    dw printerRedir - serverDispTbl             ;AX=5D07h
    dw printerRedir - serverDispTbl             ;AX=5D08h
    dw printerRedir - serverDispTbl             ;AX=5D09h
    dw setExtendedErrorInfo - serverDispTbl     ;AX=5D0Ah
serverDispTblL   equ     $ - serverDispTbl